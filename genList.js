#!/usr/bin/env node
/* process an node-red flows.json input file and generate a json configuration for the data logging
 * if no argument, then ./flows.json is assumed, else it will be the json file to parse
 * the result is piped to output, redirect it to a file
 *
 * ASSUMPTIONS:
 * All the required elements are in the root-level json document, generated by using node-ads under
 * node-red, and the topic name is carried through ultimately as the tag name in influxdb
 */

'use strict';

const fs = require('fs');

const debug = false;

const tags = [];
var filename = 'flows.json';
var flows = {};
var targetPort = 0;
var cycleTime = 1000;   //ms
var measurement = "";
var org = "";
var bucket = "";
if (process.argv[2] !== undefined) {
    filename = process.argv[2];
}

if (debug) console.log("parsing " + filename);
try {
    let flowdata = fs.readFileSync(filename);
    flows = JSON.parse(flowdata);
} catch (err) {
    console.log(filename + " is not a valid flows.json file");
    if (debug) console.log(err);
    return 1;
}

//console.log(flows);
for (const [key, symbol] of Object.entries(flows)) {
    if (symbol.type !== undefined){
        if (symbol.type === 'ADS Notification') {
            if (debug) console.log(symbol.varName);
            const toAdd = {};
            toAdd['tag'] = symbol.varName;
            toAdd['type'] = symbol.varTyp;
            toAdd['field'] = symbol.topic;
            cycleTime = Math.min(cycleTime, parseInt(symbol.cycleTime));
            tags.push(toAdd);
        }
        else if (symbol.type === 'ads-connection') {
            targetPort = parseInt(symbol.amsPortTarget);
            if (debug) console.log("found target port " + targetPort);
        }
        else if (symbol.type === 'influxdb out') {
            org = symbol.org;
            bucket = symbol.bucket;
            measurement = symbol.measurement;
        }
    }
}
const result = {};
result['port'] = targetPort;
result['org'] = org;
result['bucket'] = bucket;
result['measurement'] = measurement;
result['tags'] = tags;

console.log(JSON.stringify(result));

